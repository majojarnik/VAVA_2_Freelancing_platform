/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import sk.stu.fiit.controllers.LeaseController;
import sk.stu.fiit.controllers.OfferController;
import sk.stu.fiit.data.Data;
import sk.stu.fiit.exceptions.BlankFields;
import sk.stu.fiit.models.Employer;
import sk.stu.fiit.models.JobOffer;
import sk.stu.fiit.models.Lease;
import sk.stu.fiit.models.employees.Programmer;
import sk.stu.fiit.models.employees.Specialist;

/**
 *
 * @author jarni
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form Nieco
     */
    public MainWindow() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlAddLease = new javax.swing.JPanel();
        lblSpecialists = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmplLease = new javax.swing.JTable();
        lblEmployer = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSpecLease = new javax.swing.JTable();
        btnAddLease = new javax.swing.JButton();
        lblHelp = new javax.swing.JLabel();
        cmbSpecType = new javax.swing.JComboBox<>();
        pnlListSpec = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSpecialists = new javax.swing.JTable();
        btnAddSpec = new javax.swing.JButton();
        btnShowSpec = new javax.swing.JButton();
        pnlListEmp = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblEmployers = new javax.swing.JTable();
        btnAddEmp = new javax.swing.JButton();
        btnShowEmp = new javax.swing.JButton();
        pnlListLease = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblLease = new javax.swing.JTable();
        btnShowLease = new javax.swing.JButton();
        btnRemoveLease = new javax.swing.JButton();
        pnlListOffers = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblOffer = new javax.swing.JTable();
        btnAddOffer = new javax.swing.JButton();
        btnShowOffer = new javax.swing.JButton();
        btnRemoveOffer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlAddLease.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSpecialists.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblSpecialists.setText("Špecialisti");
        pnlAddLease.add(lblSpecialists, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        tblEmplLease.setModel(initEmpTableModel(Data.getAllEmployers()));
        tblEmplLease.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblEmplLease);

        pnlAddLease.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 580, 90));

        lblEmployer.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblEmployer.setText("Zamestnávateľ");
        pnlAddLease.add(lblEmployer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        tblSpecLease.setModel(initSpecTableModel(Data.getAllSpecialists(), "Všetky kategórie", true));
        tblSpecLease.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(tblSpecLease);

        pnlAddLease.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 580, 160));

        btnAddLease.setText("Vytvor prenájom");
        btnAddLease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddLeaseMouseReleased(evt);
            }
        });
        pnlAddLease.add(btnAddLease, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, -1, -1));

        lblHelp.setText("*pre označenie viac ako jedného špecialistu, držte CTRL");
        pnlAddLease.add(lblHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        cmbSpecType.setModel(initComboTypes());
        cmbSpecType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSpecTypeActionPerformed(evt);
            }
        });
        pnlAddLease.add(cmbSpecType, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 140, -1));

        jTabbedPane1.addTab("Vytvor prenájom", pnlAddLease);

        pnlListSpec.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblSpecialists.setModel(initSpecTableModel(Data.getAllSpecialists(), "Všetky kategórie", false));
        jScrollPane2.setViewportView(tblSpecialists);

        pnlListSpec.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 380));

        btnAddSpec.setText("Pridať špecialistu");
        btnAddSpec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddSpecMouseReleased(evt);
            }
        });
        pnlListSpec.add(btnAddSpec, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, -1, -1));

        btnShowSpec.setText("Editovať špecialistu");
        btnShowSpec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnShowSpecMouseReleased(evt);
            }
        });
        pnlListSpec.add(btnShowSpec, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, -1, -1));

        jTabbedPane1.addTab("Zoznam špecialistov", pnlListSpec);

        pnlListEmp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblEmployers.setModel(initEmpTableModel(Data.getAllEmployers()));
        jScrollPane4.setViewportView(tblEmployers);

        pnlListEmp.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 380));

        btnAddEmp.setText("Pridať zamestnávateľa");
        btnAddEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddEmpMouseReleased(evt);
            }
        });
        pnlListEmp.add(btnAddEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, -1, -1));

        btnShowEmp.setText("Pozrieť zamestnávateľa");
        btnShowEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnShowEmpMouseReleased(evt);
            }
        });
        pnlListEmp.add(btnShowEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, -1, -1));

        jTabbedPane1.addTab("Zoznam zamestnávateľov", pnlListEmp);

        pnlListLease.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblLease.setModel(initLeaseTableModel());
        jScrollPane5.setViewportView(tblLease);

        pnlListLease.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 380));

        btnShowLease.setText("Pozrieť prenájom");
        btnShowLease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnShowLeaseMouseReleased(evt);
            }
        });
        pnlListLease.add(btnShowLease, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, -1, -1));

        btnRemoveLease.setText("Odstrániť prenájom");
        btnRemoveLease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRemoveLeaseMouseReleased(evt);
            }
        });
        pnlListLease.add(btnRemoveLease, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 380, -1, -1));

        jTabbedPane1.addTab("Zoznam prenájmov", pnlListLease);

        pnlListOffers.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOffer.setModel(initOfferTableModel());
        jScrollPane6.setViewportView(tblOffer);

        pnlListOffers.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 380));

        btnAddOffer.setText("Pridať ponuku");
        btnAddOffer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddOfferMouseReleased(evt);
            }
        });
        pnlListOffers.add(btnAddOffer, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, -1, -1));

        btnShowOffer.setText("Pozrieť ponuku");
        btnShowOffer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnShowOfferMouseReleased(evt);
            }
        });
        pnlListOffers.add(btnShowOffer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, -1, -1));

        btnRemoveOffer.setText("Odstráň ponuku");
        btnRemoveOffer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRemoveOfferMouseReleased(evt);
            }
        });
        pnlListOffers.add(btnRemoveOffer, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, -1, -1));

        jTabbedPane1.addTab("Zoznam ponúk", pnlListOffers);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private LeaseController leaCon = new LeaseController();
    
    private TableModel initEmpTableModel(List<Employer> emps){
        List<String> columns = new ArrayList<String>();
        List<String[]> values = new ArrayList<String[]>();

        for (Employer emp: emps){
            values.add(new String[] {emp.getName(), emp.getArea(), String.valueOf(emp.getNumEmployees())});
        }

        columns.add("Názov");
        columns.add("Oblasť podnikania");
        columns.add("Počet zamestnancov");

        TableModel tableModel = new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray());
        return tableModel;        
    }
    
    public void initEmpTables(){
        tblEmplLease.setModel(initEmpTableModel(Data.getAllEmployers()));
        tblEmployers.setModel(initEmpTableModel(Data.getAllEmployers()));
    } 
    
    private TableModel initSpecTableModel(List<Specialist> specs, String type, boolean justFree){
        List<String[]> values = new ArrayList<String[]>();
        List<String> columns = new ArrayList<String>();;
        
        if (type.equals("Všetky kategórie")){        
            for (Specialist spec: specs){
                if (Boolean.logicalOr(!justFree, spec.isFree()))
                    values.add(new String[] {spec.getName(), spec.getType(), String.valueOf(spec.getManDay()), String.valueOf(spec.getExperience()), spec.getEducation().toString()});
            }
            
            columns.add("Meno");
            columns.add("Typ špecialistu");
            columns.add("Cena za deň");
            columns.add("Dĺžka praxe");
            columns.add("Vzdelanie");
        }
        else {            
            for (Specialist spec: specs){
                if (spec.getType().equals(type)){
                    if (columns.isEmpty())
                        columns = spec.columnsTable();
                    if (Boolean.logicalOr(!justFree, spec.isFree()))
                        values.add(spec.rowsTable());
                }
            }
        }
        
        TableModel tableModel = new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray());
        return tableModel;        
    }
    
    private DefaultComboBoxModel initComboTypes(){
        List<String> types = new ArrayList<String>();
        types.add("Všetky kategórie");
        for (Specialist spec: Data.getAllSpecialists()){
            if (spec.isFree() && !types.contains(spec.getType()))
                types.add(spec.getType());
        }

        String[] array = types.toArray(new String[0]);
        
        return new DefaultComboBoxModel(array);
    }
    
    public void initSpecTables(){
        tblSpecLease.setModel(initSpecTableModel(Data.getAllSpecialists(), "Všetky kategórie", true));
        tblSpecialists.setModel(initSpecTableModel(Data.getAllSpecialists(), "Všetky kategórie", false));
        
        cmbSpecType.setModel(initComboTypes());
    } 
    
    private TableModel initOfferTableModel(){
        List<String> columns = new ArrayList<String>();
        List<String[]> values = new ArrayList<String[]>();

        for (JobOffer offer: Data.getAllOffers()){
            values.add(new String[] {offer.getType(), offer.getEmployer().getName() ,String.valueOf(offer.getManDay()), String.valueOf(offer.getExperience()),String.valueOf(offer.getEducation())});
        }

        columns.add("Pozícia");
        columns.add("Zamestnávateľ");
        columns.add("Denná mzda");
        columns.add("Počet rokov skúseností");
        columns.add("Minimálne vzdelanie");
        
        TableModel tableModel = new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray());
        return tableModel;        
    }
    
    public void initOfferTable(){
        tblOffer.setModel(initOfferTableModel());
    } 

    
    private void btnAddEmpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddEmpMouseReleased
        AddEmployer addEmployer = new AddEmployer(this);
        addEmployer.setVisible(true);
    }//GEN-LAST:event_btnAddEmpMouseReleased

    private void btnAddSpecMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSpecMouseReleased
        AddSpecialist addSpecialist = new AddSpecialist(this);
        addSpecialist.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_btnAddSpecMouseReleased

    private void cmbSpecTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSpecTypeActionPerformed
        String type = String.valueOf(cmbSpecType.getSelectedItem());
        tblSpecLease.setModel(initSpecTableModel(Data.getAllSpecialists(), type, true));
                
    }//GEN-LAST:event_cmbSpecTypeActionPerformed
    
    private void btnAddLeaseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddLeaseMouseReleased
        
        int emp = tblEmplLease.getSelectedRow();
                
        int[] specs = tblSpecLease.getSelectedRows();
        
        for (Integer sp: specs){
            System.out.println(sp);
        }
        
        try {
            System.out.println(emp);
            System.out.println(specs);
            System.out.println(String.valueOf(cmbSpecType.getSelectedItem()));
            
            leaCon.addLease(emp, specs, String.valueOf(cmbSpecType.getSelectedItem()));
            initLeaseTable();
            initSpecTables();
        } catch (BlankFields ex) {
            JOptionPane.showMessageDialog(rootPane, "Musí byť vybraný zamestnávateľ a aspoň 1 špecialista.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddLeaseMouseReleased

    private void btnRemoveLeaseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveLeaseMouseReleased
        int lease = tblLease.getSelectedRow();
                
        try {            
            leaCon.removeLease(lease);
            initLeaseTable();
            initSpecTables();
        } catch (BlankFields ex) {
            JOptionPane.showMessageDialog(rootPane, "Vyberte prenájom, ktorý chcete odstrániť.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveLeaseMouseReleased

    private void btnShowEmpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowEmpMouseReleased
        int emp = tblEmployers.getSelectedRow();
        
        if (emp < 0){
            JOptionPane.showMessageDialog(rootPane, "Vyberte zamestnávateľa, ktorého profil si chcete pozrieť.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
        else{
            EmployerProfile empProf = new EmployerProfile(Data.getAllEmployers().get(emp));       
            empProf.setVisible(true);
        }
    }//GEN-LAST:event_btnShowEmpMouseReleased

    private void btnAddOfferMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddOfferMouseReleased
        AddSpecialist addSpecialist = new AddSpecialist(this);
        addSpecialist.setVisible(true);
        addSpecialist.initOffer();
    }//GEN-LAST:event_btnAddOfferMouseReleased

    private void btnShowSpecMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowSpecMouseReleased
        int spec = tblSpecialists.getSelectedRow();
        
        if (spec < 0){
            JOptionPane.showMessageDialog(rootPane, "Vyberte špecialistu, ktorého profil chcete upraviť.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
        else{
            AddSpecialist addSpecialist = new AddSpecialist(this);
            addSpecialist.setVisible(true);
            addSpecialist.initEdit(Data.getAllSpecialists().get(spec));
        }
    }//GEN-LAST:event_btnShowSpecMouseReleased

    private void btnRemoveOfferMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveOfferMouseReleased
        int offer = tblOffer.getSelectedRow();
                
        try {            
            new OfferController().removeOffer(offer);
            initOfferTable();
        } catch (BlankFields ex) {
            JOptionPane.showMessageDialog(rootPane, "Vyberte ponuku, ktorú chcete odstrániť.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveOfferMouseReleased

    private void btnShowOfferMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowOfferMouseReleased
        int offer = tblOffer.getSelectedRow();
        
        if (offer < 0){
            JOptionPane.showMessageDialog(rootPane, "Vyberte ponuku, ktorú si chcete pozrieť.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
        else{
            ShowOffer showOffer = new ShowOffer(Data.getAllOffers().get(offer), this);
            showOffer.setVisible(true);
        }
    }//GEN-LAST:event_btnShowOfferMouseReleased

    private void btnShowLeaseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowLeaseMouseReleased
        int lease = tblLease.getSelectedRow();
        
        if (lease < 0){
            JOptionPane.showMessageDialog(rootPane, "Vyberte prenájom, ktorý si chcete pozrieť.", "Nevyplnené údaje", JOptionPane.ERROR_MESSAGE);
        }
        else{
            ShowLease showLease = new ShowLease(Data.getAllLease().get(lease));
            showLease.setVisible(true);
        }
    }//GEN-LAST:event_btnShowLeaseMouseReleased

    private TableModel initLeaseTableModel(){
        List<String> columns = new ArrayList<String>();
        List<String[]> values = new ArrayList<String[]>();

        for (Lease lease: Data.getAllLease()){
            values.add(new String[] {lease.getEmployer().getName(), String.valueOf(lease.getSpecialists().size())});
        }

        columns.add("Zamestnávateľ");
        columns.add("Počet špecialistov");

        TableModel tableModel = new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray());
        return tableModel;        
    }
    
    public void initLeaseTable(){
        tblLease.setModel(initLeaseTableModel());
    } 
    
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Nieco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Nieco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Nieco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Nieco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Nieco().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEmp;
    private javax.swing.JButton btnAddLease;
    private javax.swing.JButton btnAddOffer;
    private javax.swing.JButton btnAddSpec;
    private javax.swing.JButton btnRemoveLease;
    private javax.swing.JButton btnRemoveOffer;
    private javax.swing.JButton btnShowEmp;
    private javax.swing.JButton btnShowLease;
    private javax.swing.JButton btnShowOffer;
    private javax.swing.JButton btnShowSpec;
    private javax.swing.JComboBox<String> cmbSpecType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblEmployer;
    private javax.swing.JLabel lblHelp;
    private javax.swing.JLabel lblSpecialists;
    private javax.swing.JPanel pnlAddLease;
    private javax.swing.JPanel pnlListEmp;
    private javax.swing.JPanel pnlListLease;
    private javax.swing.JPanel pnlListOffers;
    private javax.swing.JPanel pnlListSpec;
    private javax.swing.JTable tblEmplLease;
    private javax.swing.JTable tblEmployers;
    private javax.swing.JTable tblLease;
    private javax.swing.JTable tblOffer;
    private javax.swing.JTable tblSpecLease;
    private javax.swing.JTable tblSpecialists;
    // End of variables declaration//GEN-END:variables
}
